@article{smaragdakis_pointer_2015,
	title = {Pointer Analysis},
	volume = {2},
	issn = {2325-1107, 2325-1131},
	url = {http://www.nowpublishers.com/article/Details/PGL-014},
	doi = {10.1561/2500000014},
	pages = {1--69},
	number = {1},
	journaltitle = {Foundations and Trends® in Programming Languages},
	shortjournal = {{FNT} in Programming Languages},
	author = {Smaragdakis, Yannis and Balatsouras, George},
	urldate = {2025-01-08},
	date = {2015},
	langid = {english},
	file = {PDF:/home/thundertonic/Zotero/storage/4UM64YDR/Smaragdakis and Balatsouras - 2015 - Pointer Analysis.pdf:application/pdf},
}


@incollection{ranzato_context-sensitive_2017,
	location = {Cham},
	title = {A Context-Sensitive Memory Model for Verification of C/C++ Programs},
	volume = {10422},
	isbn = {978-3-319-66705-8 978-3-319-66706-5},
	url = {http://link.springer.com/10.1007/978-3-319-66706-5_8},
	abstract = {Veriﬁcation of low-level C/C++ requires a precise memory model that supports type unions, pointer arithmetic, and casts. We present a new memory model that splits memory into a ﬁnite set of disjoint regions based on a pointer analysis. The main contribution is a ﬁeld-, array- and context-sensitive pointer analysis tailored to veriﬁcation. We have implemented our memory model for the {LLVM} bitcode and used it on a C++ case study and on {SV}-{COMP} benchmarks. Our results suggests that our model can reduce veriﬁcation time by producing a ﬁner-grained partitioning in presence of function calls.},
	pages = {148--168},
	booktitle = {Static Analysis},
	publisher = {Springer International Publishing},
	author = {Gurfinkel, Arie and Navas, Jorge A.},
	editor = {Ranzato, Francesco},
	urldate = {2025-01-08},
	date = {2017},
	langid = {english},
	doi = {10.1007/978-3-319-66706-5_8},
	note = {Series Title: Lecture Notes in Computer Science},
	file = {PDF:C\:\\Users\\Kevin\\Zotero\\storage\\E34MT28M\\Gurfinkel and Navas - 2017 - A Context-Sensitive Memory Model for Verification of CC++ Programs.pdf:application/pdf},
}
